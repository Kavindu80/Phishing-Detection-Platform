# CI/CD Pipeline Configuration
# This file contains configuration settings for the PhishGuard CI/CD pipeline

# Default environment variables for all workflows
default_env:
  # Application Configuration
  APP_NAME: "PhishGuard"
  APP_VERSION: "1.0.0"
  
  # Python Configuration
  PYTHON_VERSION: "3.9"
  PYTHON_CACHE_KEY: "python-deps-${{ hashFiles('backend/requirements.txt') }}"
  
  # Node.js Configuration
  NODE_VERSION: "18"
  NODE_CACHE_KEY: "node-deps-${{ hashFiles('frontend/package-lock.json') }}"
  
  # Database Configuration
  MONGODB_VERSION: "4.4"
  MONGODB_TEST_URI: "mongodb://localhost:27017/phishguard_test"
  
  # Port Configuration
  BACKEND_PORT: 5000
  FRONTEND_PORT: 5173
  
  # Docker Configuration
  DOCKER_REGISTRY: "ghcr.io"
  DOCKER_IMAGE_PREFIX: "phishguard"
  
  # Testing Configuration
  TEST_TIMEOUT: 300
  COVERAGE_THRESHOLD: 80
  
  # Security Configuration
  SECURITY_SCAN_LEVEL: "moderate"
  VULNERABILITY_THRESHOLD: "medium"
  
  # Performance Configuration
  PERFORMANCE_USERS: 10
  PERFORMANCE_SPAWN_RATE: 2
  PERFORMANCE_RUNTIME: 30

# Pipeline configuration
pipeline:
  # Quality Gates
  quality_gates:
    code_coverage:
      minimum: 80
      target: 90
    
    security_scan:
      max_critical: 0
      max_high: 2
      max_medium: 5
    
    performance:
      max_response_time: 2000  # ms
      max_error_rate: 1  # percentage
    
    test_results:
      min_passed: 95  # percentage

  # Deployment Environments
  environments:
    staging:
      name: "Staging Environment"
      url: "https://staging.phishguard.com"
      auto_deploy: true
      required_approvals: 0
    
    production:
      name: "Production Environment"
      url: "https://phishguard.com"
      auto_deploy: false
      required_approvals: 1
      protection_rules:
        - required_status_checks:
            strict: true
            contexts:
              - "ci-cd-pipeline"
              - "security-scan"
              - "quality-assurance"

  # Notification Settings
  notifications:
    slack:
      channel: "#deployments"
      webhook_url: "${{ secrets.SLACK_WEBHOOK }}"
    
    email:
      recipients:
        - "kavindu80@gmail.com"
    
    github:
      create_issues: true
      create_releases: true

  # Artifact Retention
  artifact_retention:
    days: 30
    max_size: "1GB"
    
  # Cache Settings
  cache_settings:
    python:
      key: "${{ env.PYTHON_CACHE_KEY }}"
      path: "~/.cache/pip"
      restore_keys:
        - "${{ runner.os }}-pip-"
    
    node:
      key: "${{ env.NODE_CACHE_KEY }}"
      path: "node_modules"
      restore_keys:
        - "${{ runner.os }}-node-"

  # Timeout Settings
  timeouts:
    job: 3600  # 1 hour
    step: 600   # 10 minutes
    test: 1800  # 30 minutes

  # Resource Limits
  resource_limits:
    memory: "4GB"
    cpu: "2"
    disk: "10GB" 